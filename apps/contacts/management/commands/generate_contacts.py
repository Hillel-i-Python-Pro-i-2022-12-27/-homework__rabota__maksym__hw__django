import logging

from django.core.management.base import BaseCommand

from apps.contacts.models import Contact
from apps.contacts.services.generate_contacts import generate_contacts


class Command(BaseCommand):
    help = "Generates contacts"

    def add_arguments(self, parser):
        parser.add_argument("--amount", type=int, default=10, help="The number of contacts to generate.")

    def handle(self, *args, **options):
        amount = options["amount"]
        logger = logging.getLogger("django")
        queryset = Contact.objects.all()
        logger.info(f"Current amount of contacts before: {queryset.count()}")
        # Generate contacts
        for contact in generate_contacts(amount=amount, is_mark_as_autogenerated=True):
            contact.save()

        logger.info(f"Current amount of contacts after: {queryset.count()}")
